{"version":3,"sources":["app.ts","environment.ts","main.ts","D:/dev/Github/benlaan/sqlformat/Laan.Sql.Formatter.Web.Api/app/src/app.html"],"names":[],"mappings":";;;;;;;;;;;IAKA;QAIE,aAA2B,MAAkB;YAAlB,WAAM,GAAN,MAAM,CAAY;YAEzC,IAAI,CAAC,MAAM,GAAG,wDAAwD,CAAC;QAC3E,CAAC;QAEM,qBAAO,GAAd;YAAA,iBAWC;YATC,MAAM,CAAC,IAAI;iBACR,MAAM;iBACN,GAAG,CAAC,2BAAyB,IAAI,CAAC,MAAQ,CAAC;iBAC3C,IAAI,CAAC,UAAA,CAAC;gBAEL,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACpC,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC;gBAC/B,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,kBAAI,GAAX;QAGA,CAAC;QAED,sBAAW,6BAAY;iBAAvB;gBAEI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;YAC9B,CAAC;iBAED,UAAwB,KAAoB;gBAExC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,qCAAc,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACpE,CAAC;;;WANA;QA/BH;YAAC,8BAAU;;eAAA;QA0CX,UAAC;IAAD,CAzCA,AAyCC,IAAA;IAzCY,WAAG,MAyCf,CAAA;;;;;IC9CD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE,CAAC;QAE3B,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IATe,iBAAS,YASxB,CAAA;;;ACpBD","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\nimport { HttpClient } from 'aurelia-http-client';\nimport { prettyPrintOne } from 'google-code-prettify';\n\n@autoinject\nexport class App {\n\n  private _formattedSql: Array<string>;\n\n  public constructor(private client: HttpClient) {\n\n      this.rawSql = \"SELECT * FROM Table T JOIN Other O ON O.Id = T.OtherId\";\n  }\n\n  public convert(): Promise<void> {\n\n    return this\n      .client\n      .get(`/api/sql/format?query=${this.rawSql}`)\n      .then(r => {\n\n        var result = JSON.parse(r.response);\n        this.formattedSql = result.Sql;\n        this.timeTaken = result.Duration;\n      });\n  }\n\n  public copy(): void {\n\n\n  }\n\n  public get formattedSql(): Array<string> {\n\n      return this._formattedSql;\n  }\n\r\n  public set formattedSql(value: Array<string>) {\n\n      this._formattedSql = value;\n      this.formattedCode.innerHTML = prettyPrintOne(value.join(\"\\n\"));\n  }\n\n  public timeTaken: string;\n  public rawSql: string;\n  public formattedCode: Element;\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration();\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n",null],"sourceRoot":"..\\src"}